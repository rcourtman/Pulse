name: Build and Push Docker Images

on:
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        run: |
          # Get the tag name from the release
          TAG="${{ github.event.release.tag_name }}"
          VERSION="${TAG#v}"  # Remove 'v' prefix
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          
          # Determine if this is a pre-release (RC)
          if [[ "$VERSION" == *"-rc"* ]]; then
            echo "is_rc=true" >> $GITHUB_OUTPUT
            echo "latest_tag=rc" >> $GITHUB_OUTPUT
          else
            echo "is_rc=false" >> $GITHUB_OUTPUT
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            rcourtman/pulse:${{ steps.meta.outputs.tag }}
            rcourtman/pulse:${{ steps.meta.outputs.latest_tag }}

      - name: Update release with Docker info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Add Docker pull commands to release body
          CURRENT_BODY=$(gh release view ${{ github.event.release.tag_name }} --json body -q .body)
          
          DOCKER_INFO="

## üê≥ Docker Images

Docker images are now available:

\`\`\`bash
# Pull this specific version
docker pull rcourtman/pulse:${{ steps.meta.outputs.tag }}

# Pull latest ${{ steps.meta.outputs.is_rc == 'true' && 'RC' || 'stable' }} version
docker pull rcourtman/pulse:${{ steps.meta.outputs.latest_tag }}
\`\`\`"
          
          # Only add if not already present
          if ! echo "$CURRENT_BODY" | grep -q "Docker Images"; then
            gh release edit ${{ github.event.release.tag_name }} --notes "$CURRENT_BODY$DOCKER_INFO"
          fi